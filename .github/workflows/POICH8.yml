name: POI CH8

env:
  poi_path: apis/poi/** 
  registry: openhackmlm47ad5acr.azurecr.io
  repository: devopsoh/api-poi
  docker_path: apis/poi/web
  staging_url: https://openhackmlm47ad5poi-staging.azurewebsites.net
  prod_url: https://openhackmlm47ad5poi.azurewebsites.net
  resource_group: openhackmlm47ad5rg
  webapp_name: openhackmlm47ad5poi
  build_name: POI

on:
  push:
    branches: [ phased_rollout ]
    paths: 
      - apis/poi/**  
      - .github/workflows/poi.yml
  pull_request:
    branches: [ phased_rollout ]
    paths: 
      - apis/poi/**
      - .github/workflows/poi.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.202'

    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests/UnitTests.csproj

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  docker_build_and_push:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:     
    - uses: actions/checkout@v2

    - name: Docker login     
      run: docker login $registry -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Docker build
      run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path

    - name: Docker Push
      run: docker push $registry/$repository:${{github.run_number}}  

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  deploy_staging:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }}
        slot-name: staging
        images: ${{ env.registry }}/${{ env.repository }}:${{github.run_number}}

    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  route_traffic_one_percent:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: deploy_staging
    steps:    
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=1 --name ${{ env.webapp_name }} --resource-group $resource_group
  
  validate_one_percent:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: route_traffic_one_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 ${{ env.prod_url }}/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi
  route_traffic_ten_percent:
      if: github.ref == 'refs/heads/phased_rollout'
      runs-on: ubuntu-latest
      needs: validate_one_percent
      steps:
      - name: Azure authentication
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS  }} 
      
      - name: Swap staging to production
        run: |
          az webapp traffic-routing set --distribution staging=10 --name ${{ env.webapp_name }} --resource-group $resource_group
  
  validate_ten_percent:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: route_traffic_ten_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 ${{ env.prod_url }}/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi  
  route_traffic_onehundred_percent:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: validate_ten_percent
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=100 --name ${{ env.webapp_name }} --resource-group $resource_group
  validate_onhundred_percent:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: route_traffic_onehundred_percent
    steps:
    - name: Install Apache Bench
      run: sudo apt-get install  apache2-utils

    - name: Load Test 
      run: | 
        failures=$(ab -t 10 -c 10 ${{ env.prod_url }}/api/version/poi | grep -Poe 'Failed requests: \K.*' | sed 's/^ *//g')
        if [ "$failures" -gt "0" ];then
          exit -1
        fi       
  deploy_production:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: validate_onhundred_percent
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: ${{ env.webapp_name }}
        slot-name: production
        images: ${{ env.registry }}/${{ env.repository }}:${{github.run_number}}

  route_all_traffic_production:
    if: github.ref == 'refs/heads/phased_rollout'
    runs-on: ubuntu-latest
    needs: deploy_production
    steps:
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }} 
    
    - name: Swap staging to production
      run: |
        az webapp traffic-routing set --distribution staging=0 --name ${{ env.webapp_name }} --resource-group $resource_group
